# Step1 - create a docker image and push to docker hub or to local minikute repository
# Step2 - create a deployment yaml file with the Deplyment Object. this will create a replica set and also the required pods which will have containers running.
# Step3 - create a service yaml file to access the pods within or outside of the k8s cluster.


# to access the service which is exposed by the deployment, get the ip addrerss of the minikube
# minikube ip

# http://192.168.99.101:30080/server/getData

apiVersion: apps/v1
kind: Deployment
metadata:
  name: boot-server # deployment doesnt have any labels; the pod template does
spec:
  replicas: 2
  selector: 
    matchLabels:
      app: boot-server
      version: "1.0"
  template:  # this is the pod template
    metadata:
      #name: boot-server
      labels:
        app: boot-server
        version: "1.0"
    spec:    
      containers: 
      - name: boot-server
        image: minikubedocker/spring-boot-server
        # this policy will use the docker image from the local minikube docker policy
        # to use minikube's docker use the following command: eval $(minikube docker-env)
        imagePullPolicy: Never
        envFrom:
        - configMapRef:
            name: service1-config-map
        resources:
          requests:
            cpu: 200m
            memory: 200M
          limits:
            cpu: 300m
            memory: 300M

        # env:
        #   - name: SERVER_SERVLET_CONTEXT_PATH #server.servlet.context-path
        #     value: /api-service1


# this deplyment will create a new service to test a multi service env
kind: Deployment
apiVersion: apps/v1
metadata:
  name: spring-boot-service2
spec:
  replicas: 2
  selector: 
    matchLabels:
      app: spring-boot-service2
      version: "1.0"
  template:
    metadata:
      labels:
        app: spring-boot-service2
        version: "1.0"
    spec:
      containers:
      - image: minikubedocker/spring-boot-server
        name: spring-boot-service2
        imagePullPolicy: Never
        # env:
        #   # the env variables cannot have . and -; have to be replaced with _
        #   - name: SERVER_SERVLET_CONTEXT_PATH
        #     value: /api-service2
        envFrom:
        - configMapRef:
            name: service2-config-map
        # the resources section helps in setting up the requests and limits
        resources:
          requests:
            cpu: 100m
            memory: 200M
          limits:
            cpu: 100m
            memory: 300M

---